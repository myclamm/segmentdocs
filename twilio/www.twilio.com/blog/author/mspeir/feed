<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Megan Speir &#8211; Twilio Cloud Communications Blog</title>
	<atom:link href="https://twilioinc.wpengine.com/author/mspeir/feed" rel="self" type="application/rss+xml" />
	<link>https://twilioinc.wpengine.com</link>
	<description></description>
	<lastBuildDate>Fri, 13 Jan 2017 19:24:02 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.2</generator>

<image>
	<url>https://twilioinc.wpengine.com/wp-content/uploads/2015/09/cropped-favicon_1141-32x32.png</url>
	<title>Megan Speir &#8211; Twilio Cloud Communications Blog</title>
	<link>https://twilioinc.wpengine.com</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Gifted: Artificial Intelligence to Hack Gift Giving</title>
		<link>https://twilioinc.wpengine.com/2016/12/gifted-artificial-intelligence-to-hack-gift-giving.html</link>
		<comments>https://twilioinc.wpengine.com/2016/12/gifted-artificial-intelligence-to-hack-gift-giving.html#respond</comments>
		<pubDate>Tue, 20 Dec 2016 20:50:25 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Developers Drawing The Owl]]></category>

		<guid isPermaLink="false">https://twilioinc.wpengine.com/?p=19352</guid>
		<description><![CDATA[<p>Artificial Intelligence (AI) is coming for us all. Michael Jordan, a mechanical engineer by trade, came to this realization while working as the director of energy and sustainability at a New York City based firm serving large real estate clients. While busy building energy models, Michael thought that much of his work in applied engineering was actually an optimization problem. Eventually, AI will solve most of... <a class="read-more" href="https://twilioinc.wpengine.com/2016/12/gifted-artificial-intelligence-to-hack-gift-giving.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/12/gifted-artificial-intelligence-to-hack-gift-giving.html">Gifted: Artificial Intelligence to Hack Gift Giving</a></p>]]></description>
				<content:encoded><![CDATA[<p>Artificial Intelligence (AI) is coming for us all. Michael Jordan, a mechanical engineer by trade, came to this realization while working as the director of energy and sustainability at a New York City based firm serving large real estate clients.</p>
<p>While busy building energy models, Michael thought that much of his work in applied engineering was actually an optimization problem. Eventually, AI will solve most of these problems through automation.</p>
<p>Sometimes it&#8217;s best to face the inevitable and dive head first into the unknown. Embracing the future, Michael decided to do just this by studying more about machine learning and AI.</p>
<p>His tutelage ran the gamut from text-based learning with <a href="http://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html">scikit</a>&#8211;<a href="http://scikit-learn.org/stable/modules/feature_extraction.html">learn</a> to genetic algorithms. He was excited by the idea that you could take a product specification and learn the math behind it. This exploration led him to image analysis with the <a href="https://cloud.google.com/vision/">Google Vision API</a> and finally to <a href="https://clarifai.com">Clarifai</a>.</p>
<h3 id="h.um4ysw1s5v3r">The Epic Christmas List</h3>
<p><img class="&quot; aligncenter" style="width: 624.00px; height: 581.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/j-BhLqMTOpb3hN1tisXy8FJ7gYkPXMdDP1KdYSWEV3-c463t8xk4t3ndPfi25XY2fam7wuYrgDjXNp-mBsaYLI-noS6WSqumu2Ey6Id6bTwKw10c3FZaekRNtvy5T5niswDyfEK.png" alt="" /></p>
<p>For years, Michael kept what he called, &#8220;The Epic Christmas List&#8221; mostly to document his heart&#8217;s greatest desires. But Michael found he was often asked by others what to gift during the season of giving and he would share the list with any such inquirer.</p>
<p>But Michael would also spend a lot of time following up to help give the gift recommendation a personal touch based upon a photograph or more detailed description of the person. Automating this recommendation method became a top priority because it was kind of a time suck. Certainly his new friend AI could help with that.</p>
<p>Michael applied machine learning to the epic christmas list. Given a corpus (of image data), he aimed to determine the relevance of each gift based upon its <a href="https://en.wikipedia.org/wiki/Tf–idf">tf-idf</a> (term frequency-inverse document frequency) or how well it related to the corpus data based upon tagged attributes (i.e. pretty, fancy, etc.) as defined in Clarifai.</p>
<p>&#8220;The tags were awesome, as they were pretty qualitative&#8221; he said. &#8220;I agreed with them!&#8221;</p>
<p>Given an image of a person, using artificial intelligence powered by algorithms and Clarifai, Gifted will suggest a gift for the individual based upon their surroundings or &#8220;interests&#8221; in a given photograph.</p>
<p>Here&#8217;s a sample of the Clarifai code:</p><pre class="crayon-plain-tag"># Authenticate with Clarifai 
CLARIFAI_APP_ID = 'CLARIFAI_APP_ID' #Go to https://www.clarifai.com/ and hit "Get your free API key"
CLARIFAI_APP_SECRET = 'CLARIFAI_APP_SECRET' ##Go to https://www.clarifai.com/ and hit "Get your free API key"

# Load the image from Twilio
pic_url = event['image']
twilio_pic = urllib2.Request(pic_url, headers={'User-Agent': "Magic Browser"})
image = urllib2.urlopen(twilio_pic)

#Load the Clarifai API 
api = ClarifaiApi()
# Process the photo with Clarifai
results = api.tag_image_urls(pic_url)['results']
# Process and store the tag confidences (if you need them)
confidence = api.tag_image_urls(pic)['results'][0]['result']['tag']['probs'] 

#Create the photo tag list
tags = []
for result in results:
        tags = tags   result['result']['tag']['classes']
        
#Remove the photo's stop words. These are words that don't provide useful information for your recommendation
stop_words = ['INSERT THE PHOTO TAGS THAT MAKE YOUR RECOMMENDATIONS WORSE']
#Example of stop words I found unhelpful:
stop_words = ['casual','landscape', 'indoors', 'sit', 'wear','horizontal', 'grass','portrait', 'people', 'facial expression', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'monochrome', 'human', 'administration', 'isolated', 'solo']
#Remove the stop words
tag_set = set(tags) - set(stop_words) 

# You now have the tags and confidence for the photo from twilio. You can get creative and decide how you feel to these best match your recommendation database.</pre><p></p>
<h3 id="h.um4ysw1s5v3r">Gifted Giving</h3>
<p>With the artificial intelligence piece of the product puzzle working, Michael needed to make it usable. &#8220;I have zero front-end skills,&#8221; he says. As he shopped the idea around, a friend suggested Michael do it through text messaging.</p>
<p>&#8220;It&#8217;s something everyone knows how to do and is comfortable with,&#8221; Michael says of sending messages.</p>
<p>A quick search led him to this <a href="https://www.twilio.com/blog/2015/11/sending-selfies-without-servers-how-to-use-twilio-mms-amazon-lamba-and-amazons-gateway.html">blog post</a>, using Amazon Lambda and their API Gateway to send MMS without servers.</p>
<p>The architecture looks something like this:</p>
<p>&nbsp;</p>
<p><img class="&quot; aligncenter" style="width: 624.00px; height: 260.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/xNWzqjDZKIvBT0K4T5KwSFhPjDMCTRjI06cRnsEgu_edShBHdjn1biVRT76IvkaAMvkDywnzrqocak3T32ny8wyZ8YlakmMVkNkMZxvKRSOCTchTYn4lZqAFvi_j11sF-kV31civ.png" alt="" /><br />
Thanks to that post, Michael was able to throw away a lot of his Python code in one weekend and architect a sort of micro-platform using Amazon and Twilio to build a consumer product with a familiar front-end via messaging.</p>
<p><img class="&quot; aligncenter" style="width: 323.09px; height: 573.50px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/k7aNLhBYYfZh5cNOV82_MVWxjFhRije67vy0JMC8I53-az_vFF97D9hYLppW5invWegc2hL2Oy6EDmjeiR4hcboccg_VgPa5GJCHhAh1kJf-VxbuxrhH4bt8S4ekPuTSHQIyu1Gl.png" alt="" /></p>
<h3></h3>
<h3 id="h.um4ysw1s5v3r">Unwrapped &#8211; How Does it Work?</h3>
<p>After testing Gifted with friends, Michael says, &#8220;People were blown away by how good some of the suggestions were and by how bad or funny some of the others happened to be.&#8221;</p>
<p>The hardest part was manually attaching gifts to a tag in the database.</p>
<p><a href="https://www.twilio.com/docs/api/rest/sending-messages">Sending an MMS</a> through Gifted, creates a Twilio GET request with the image. This goes through the Amazon API Gateway and converts the request into JSON. Then an AWS Lambda function representing the app is where Clarifai receives the image from Twilio, tags it and compares the image to those already in the database. This is where the quality of the recommendation comes in &#8211; and returns an Amazon link to a related product from the <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html">Pandas dataframe</a> built into the application.</p>
<p>Gifted was built with Python 2.7 as Lambda does not yet support Python 3. But Michael says, &#8220;That&#8217;s a nice thing about machine learning is that basically everything is in Python.&#8221;</p>
<h3 id="h.um4ysw1s5v3r">Give a Gifted Gift</h3>
<p>There&#8217;s still time to finish some last minute shopping or try out Gifted for another gift-giving occasion.</p>
<p>This Christmas, Michael sussed out with his own creation that he will be buying a lot of books. &#8220;I didn&#8217;t know Michael Lewis was writing a new book and my mom is like the all-time biggest Michael Lewis fan!&#8221;</p>
<p>To learn more about the project or try it out for yourself, visit <a href="http://www.givingiq.com">http://www.givingiq.com</a>.</p>
<p>If you&#8217;re up for building your own artificial intelligence product for &#8220;X&#8221; like Gifted, check out the following resources:</p>
<ul style="padding-left: 36px;">
<li><a href="http://clarifai.com">Clarifai</a></li>
<li><a href="https://www.twilio.com/blog/2015/11/sending-selfies-without-servers-how-to-use-twilio-mms-amazon-lamba-and-amazons-gateway.html">AWS Lambda Twilio</a></li>
<li><a href="https://www.twilio.com/docs/api/rest/sending-messages">Sending SMS and MMS</a></li>
</ul>
<p><a href="https://twilioinc.wpengine.com/2016/12/gifted-artificial-intelligence-to-hack-gift-giving.html">Gifted: Artificial Intelligence to Hack Gift Giving</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/12/gifted-artificial-intelligence-to-hack-gift-giving.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Giphy and Twilio Text A GIF Using RapidAPI</title>
		<link>https://twilioinc.wpengine.com/2016/12/giphy-and-twilio-text-a-gif-using-rapidapi.html</link>
		<comments>https://twilioinc.wpengine.com/2016/12/giphy-and-twilio-text-a-gif-using-rapidapi.html#respond</comments>
		<pubDate>Thu, 08 Dec 2016 20:49:30 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Developers Drawing The Owl]]></category>

		<guid isPermaLink="false">https://twilioinc.wpengine.com/?p=19263</guid>
		<description><![CDATA[<p>This post originally appeared on the RapidAPI blog by Lindsey Kirchoff. RapidAPI is a marketplace where developers can test and connect to multiple APIs from one endpoint. Lindsey created an API Smash using Twilio SMS and Giphy to text GIFs. One of the reasons that we built RapidAPI is to make it easier to call multiple APIs through one console. No more juggling multiple API libraries! We&#8217;re starting a series... <a class="read-more" href="https://twilioinc.wpengine.com/2016/12/giphy-and-twilio-text-a-gif-using-rapidapi.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/12/giphy-and-twilio-text-a-gif-using-rapidapi.html">Giphy and Twilio Text A GIF Using RapidAPI</a></p>]]></description>
				<content:encoded><![CDATA[<p><em>This post </em><em><a href="http://blog.rapidapi.com/2016/12/07/giphy-and-twilio-text-a-gif-project-api-smash/?utm_source=Twitter&amp;utm_content=APISmash_TwilioGiphy%20post">originally appeared</a></em><em> on the RapidAPI blog by </em><em><a href="https://twitter.com/lindseykirchoff?lang=en">Lindsey Kirchoff</a></em><em>. RapidAPI is a marketplace where developers can test and connect to multiple APIs from one endpoint. Lindsey created an API Smash using</em><em><a href="https://www.twilio.com/docs/api/rest/sending-messages"> </a></em><em><a href="https://www.twilio.com/docs/api/rest/sending-messages">Twilio SMS</a></em><em> and </em><em><a href="https://api.giphy.com/">Giphy</a></em><em> to text GIFs.</em></p>
<p>One of the reasons that we built RapidAPI is to make it easier to call multiple APIs through one console. No more juggling multiple API libraries!</p>
<p>We&#8217;re starting a series where we smash two APIs together to make a project. Today? We&#8217;re putting together Giphy and Twilio to make &#8220;Text A GIF&#8221; script that texts someone a GIF based on a user-input phrase.</p>
<h3 id="h.um4ysw1s5v3r">Demo: &#8220;Text a GIF&#8221;</h3>
<p>We created a &#8220;Text a GIF&#8221; app that runs in the Terminal.  The user types in a phrase and a phone number and the &#8220;Text A GIF&#8221; app sends a related, random GIF. See below for a demo!</p>
<p><img class="aligncenter wp-image-19285 size-full" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/giphy-3.gif" alt="giphy-3" width="480" height="270" /><br />
Aaaaaand here&#8217;s the source code.  You can also find it <a href="https://github.com/RapidSoftwareSolutions/APISmash_GiphyTwilio_TextAGif">on GitHub</a>.</p><pre class="crayon-plain-tag">var RapidAPI = new require('rapidapi-connect');
var rapid = new RapidAPI('Demo', '############'); //Your RapidAPI Account number

//Retreiving GIF text and target phone number from command line
var gifText = process.argv[2];
var phoneNumber = process.argv[3];

rapid.call('Giphy', 'translateTextToGif', {
       'rating': 'pg',
       'apiKey': '###########', //This is GIPHY's public beta key
       'text': gifText, //This value needs to be input by user
       'lang': 'en'
   }).on('success', (payload)=&gt;{
       var gif = payload.data.images.fixed_height.url;
       rapid.call('Twilio', 'sendMms', {
           'from': ' ###########', //This is the phone number you register on Twilio
           'to': phoneNumber,//This value needs to be input by user
           'applicationSid': '',
           'statusCallback': '',
           'accountSid': '####################',//This is your Twilio accountSid number (from registering a Twilio account)
           'accountToken': '###################',//This is your Twilio accountToken (from registering a Twilio account)
           'messagingServiceSid': '################',//This is your Twilio messagingSid number (from registering Twilio messaging functionality)
           'mediaUrl': gif, //This link will be generated by Giphy API
           'maxPrice': '',
           'provideFeedback': ''
       }).on('success', (payload)=&gt;{

            console.log("Check your phone!");
       }).on('error', (payload)=&gt;{
            console.log("Error sending MMS");
       });

   }).on('error', (payload)=&gt;{
       res.send("Error finding GIF");
   });</pre><p>&nbsp;</p>
<p>We built this project by exporting JavaScript code snippets from RapidAPI&#8217;s <a href="https://goo.gl/w8c1hJ">Giphy</a> and <a href="https://goo.gl/e0bs0d">Twilio API</a><a href="https://goo.gl/e0bs0d"> </a>packages. You can recreate this app in your preferred language by filling in the parameters on RapidAPI and exporting the snippet in the language of your choice (ex. Python, PHP, Java, Objective-C and cURL).</p>
<p>&nbsp;</p>
<p><img class="&quot; aligncenter" style="width: 624.00px; height: 462.67px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/CgvGyk9nut5UCz9TVP-HlyTSXVu6CNvHFpvz9i0lRqwo1q1nsakOJBtYVmmNmk0I3fr82rCXw8K3g9erNQDHvy3BfKPVNfhkzJTxPYk16A2E-h3k3H37_GXEeCW3LGOCEC-8X7mQ.png" alt="giphy-5" /></p>
<p>Now, here&#8217;s how we built it!</p>
<h3 id="h.vkd38ug6btz" class="c6 c11">Step 1: Storing user inputs in variables</h3>
<p>The first lines of code call RapidAPI. (If you haven&#8217;t already installed it, you&#8217;ll be walked through that process when you sign up for a free RapidAPI account).</p><pre class="crayon-plain-tag">var RapidAPI = new require('rapidapi-connect');
var rapid = new RapidAPI('Demo', '############'); //Your RapidAPI Account number</pre><p>Next, the &#8220;Text a GIF&#8221; app requires the user to input text and a phone number from the command line. The following lines of code store these user inputs into two variables.</p><pre class="crayon-plain-tag">//Retrieving GIF text and target phone number from command line
var gifText = process.argv[2];
var phoneNumber = process.argv[3];</pre><p><em>Note: In order for Twilio to read the phone number, it must be written in </em><em><a href="https://en.wikipedia.org/wiki/E.164">E.164 formatting</a></em><em>. All that means is “ ” then country code, then number, with no dashes or spacing. For example, 18008675309.</em></p>
<h3 id="h.mtevjm30vkbx" class="c6 c11">Step 2: Connecting to the Giphy API</h3>
<p><strong>How to Call the Giphy API</strong><br />
Our next step was <a href="https://goo.gl/yxxOlX">connecting to the Giphy via the RapidAPI package</a> and exporting the code snippet in JavaScript.</p>
<p>The endpoint we used for this app was <code>translateTextToGif</code>.  This endpoint generates a GIF based on the word that you type in. You can even filter the results by rating (G, PG, PG-13, R) and language (using the <a href="https://www.loc.gov/standards/iso639-2/php/code_list.php">ISO 639-1 country cod</a>e—English is &#8220;en&#8221;).<br />
You can <a href="https://goo.gl/bU2OoA">test this endpoint</a> right within your browser. Type in the parameters above and use dc6zaTOxFJmzC as an <code>access_token</code>. Giphy provides a public beta key for anyone to use. (If you want to submit an app for production, you can request a production key <a href="http://api.giphy.com/submit">here</a>.)</p>
<p>&nbsp;</p>
<p><img class="&quot; aligncenter" style="width: 624.00px; height: 501.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/vUg11Cd8BDI2BybYh7qi88-WzVKXjauAHIQR6sRbrIobwChYRQssbGlp66ipBloXPMneq7ENL_BlIF-HofCg7CdGouyNNoiV9pJPumVfpFjcOv5H9Rbo9N0R6_dVJ5elSYrx2jHU.png" alt="giphy-6" /></p>
<p>&nbsp;</p>
<p><strong>Incorporating the Giphy API into the code</strong><br />
Using the <code>translateTextToGiF</code> endpoint, the Giphy API generates a GIF based on the text the user input in the Terminal (in this case, <code>gifText</code> ).</p><pre class="crayon-plain-tag">var RapidAPI = new require('rapidapi-connect');
var rapid = new RapidAPI('Demo', '############'); //Your RapidAPI Account number

//Retrieving GIF text and target phone number from command line
var gifText = process.argv[2];
var phoneNumber = process.argv[3];</pre><p>If the call is successful, the script will call Twilio&#8217;s API to text a MMS with the generated GIF. If the call isn&#8217;t successful, the script will read an error message that lets the user know the problem was with the GIF generation.</p>
<h3 id="h.di5wskbpw80b" class="c6 c11">Step 3: Call the Twilio API</h3>
<p><strong>How to call the Twilio API</strong><br />
Our next step was connecting to the <a href="https://goo.gl/olis6T">Twilio API</a> to send a text message. In order to connect to the Twilio API, you&#8217;ll need an <code>accountToken</code>, <code>accountSid</code>, <code>messagingSid</code> and to generate a Twilio phone number. These can all be generated for free in the <a href="https://www.twilio.com/console">Twilio console</a> . Here&#8217;s a <a href="https://goo.gl/jMctF0">quick post</a> on how to get the credentials that you need.</p>
<p><em>Note: If you generate a </em><em>free</em><em> &#8220;from&#8221; phone number with your Twilio developer account, then the phone number you associate with the free &#8220;from&#8221; number is the ONLY one you can send messages to. In this case, the &#8220;Text A GIF&#8221; app will only send GIFs to your phone number. In order to send a message to any number, you must purchase an upgrade (see more in the </em><em><a href="http://twilio.com/console">Twilio developer console</a></em><em>). </em></p>
<p><strong>Incorporating the Twilio API into the code</strong><br />
For the &#8220;Text a GIF&#8221; project, we called the <code>sendMms</code> endpoint. Using this endpoint, Twilio can send a multi-media message to the phone number the user entered (in this case, the variable <code>phoneNumber</code>).</p>
<p>The Giphy API <code>translateTextToGiF</code> endpoint returns a variety of data. To store the image URL, we created a variable called <code>gif</code>. (Scroll down through code to display).</p><pre class="crayon-plain-tag">/*var RapidAPI = new require('rapidapi-connect');
var rapid = new RapidAPI('Demo', '############'); //Your RapidAPI Account number

//Retrieving GIF text and target phone number from command line
var gifText = process.argv[2];
var phoneNumber = process.argv[3];

rapid.call('Giphy', 'translateTextToGif', { 
        'rating': 'pg',
        'apiKey': '###########', //This is GIPHY's public beta key
        'text': gifText, //This value needs to be input by user
        'lang': 'en'
  */  }).on('success', (payload)=&gt;{
        var gif = payload.data.images.fixed_height.url;
      rapid.call('Twilio', 'sendMms', { 
            'from': ' ###########', //This is the phone number you register on Twilio
            'to': phoneNumber,//This value needs to be input by user
            'applicationSid': '',
            'statusCallback': '',
            'accountSid': '####################',//This is your Twilio accountSid number (from registering a Twilio account)
            'accountToken': '###################',//This is your Twilio accountToken (from registering a Twilio account)
            'messagingServiceSid': '################',//This is your Twilio messagingSid number (from registering Twilio messaging functionality)
            'mediaUrl': gif, //This link will be generated by Giphy API
            'maxPrice': '',
            'provideFeedback': ''
        }).on('success', (payload)=&gt;{

             console.log("Check your phone!");
        }).on('error', (payload)=&gt;{
             console.log("Error sending MMS");
        });

  /*  }).on('error', (payload)=&gt;{
        res.send("Error finding GIF");
    }); */</pre><p>If the Giphy API call is successful in generating a GIF, then the Twilio API will retrieve the image URL (<code>gif</code>) and text it to the phone number the user inputted initially (<code>phoneNumber</code>). The script will then prompt the user with &#8220;Check your phone!&#8221; If the Twilio API call is unsuccessful, the script will return the prompt &#8220;Error sending MMS.&#8221;</p>
<h3 id="h.yfqu7iinzlvm" class="c6 c11">Ta-da!</h3>
<p><img class="&quot; aligncenter" style="width: 624.00px; height: 468.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/63TUiWN4_mVPH7Tbnu6chCJuES0yzMi_3zbSbilcuHsAfQ_YJYIk0TPItrpxMq82RoNVWXBkPpBhT6kvbxzjlSeMmAVLIEjcCVFjxShmD-j-aj7nd1Q4DWJpe9Y0O8Fwl2CHeeTc.png" alt="giphy-4" /></p>
<p>This article wouldn&#8217;t be complete without at least one celebratory GIF. Let us know what you think of <a href="https://github.com/RapidSoftwareSolutions/APISmash_GiphyTwilio_TextAGif">this project </a>or the Giphy API in the comments below. Or give us some suggestions on which APIs we should mash up next!</p>
<p><a href="https://twilioinc.wpengine.com/2016/12/giphy-and-twilio-text-a-gif-using-rapidapi.html">Giphy and Twilio Text A GIF Using RapidAPI</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/12/giphy-and-twilio-text-a-gif-using-rapidapi.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>HTTP Requests in Python 3</title>
		<link>https://twilioinc.wpengine.com/2016/12/http-requests-in-python-3.html</link>
		<comments>https://twilioinc.wpengine.com/2016/12/http-requests-in-python-3.html#respond</comments>
		<pubDate>Tue, 06 Dec 2016 22:33:32 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Code, Tutorials and Hacks]]></category>

		<guid isPermaLink="false">https://twilioinc.wpengine.com/?p=19239</guid>
		<description><![CDATA[<p>The Python Package Index (PyPI) is home to almost 100,000 code library packages that help Python programmers accomplish many tasks ranging from building web applications to analyzing data. PyPI is also home to many helper libraries for APIs such as Twilio. Let&#8217;s demonstrate the power of PyPI packages by taking look at how to retrieve and parse JSON results from a RESTful API using four different Python HTTP... <a class="read-more" href="https://twilioinc.wpengine.com/2016/12/http-requests-in-python-3.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/12/http-requests-in-python-3.html">HTTP Requests in Python 3</a></p>]]></description>
				<content:encoded><![CDATA[<p>The <a href="https://pypi.python.org">Python Package Index (PyPI)</a> is home to almost 100,000 code library packages that help Python programmers accomplish many tasks ranging from building web applications to analyzing data. PyPI is also home to many <a href="https://pypi.python.org/pypi/twilio">helper libraries</a> for APIs such as <a href="https://www.twilio.com/docs/api/rest">Twilio</a>.<br />
Let&#8217;s demonstrate the power of PyPI packages by taking look at how to retrieve and parse JSON results from a RESTful API using four different Python HTTP libraries.<br />
Each example in this post will:</p>
<ol class="c3 lst-kix_7zmn5ivh552b-0 start" start="1">
<li>Define a URL to be parsed. We’ll use the <a href="https://developer.spotify.com/web-api/">Spotify API</a> because it allows requests without authentication.</li>
<li>Make an HTTP GET request to that URL.</li>
<li>Parse the JSON result.</li>
</ol>
<p>All four of these libraries provide a different path to the same destination; if you <a href="https://docs.python.org/3.2/library/pprint.html">pprint</a> the results, you’ll see a dictionary with Spotify search results:</p>
<p><img class="aligncenter wp-image-19253 size-full" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/pprint-1.gif" alt="pprint-1" width="1152" height="720" /></p>
<p>*Notice: Results may vary depending on which version of Python you&#8217;re using. In this post, we will use Python 3 for all of the examples. Consider setting up a <a href="https://pypi.python.org/pypi/virtualenv">virtualenv</a> for Python 3 if you are still running Python 2.X system wide.<br />
The following instructions will help you use virtualenv with Python 3:</p>
<ol class="c3 lst-kix_wpt71zy5ysvj-0 start" start="1">
<li>Create a directory called <code>pythreetest</code> for your Python 3 testing.</li>
<li>Once virtualenv is installed execute the following commands from within the project directory:</li>
</ol>
<p>Create a new virtualenv with the following command:</p><pre class="crayon-plain-tag">virtualenv -p python3 myvenv</pre><p>Activate <code>myvenv</code> using the <code>source</code> command:</p><pre class="crayon-plain-tag">source myvenv/bin/activate</pre><p>Now you will be able to <code>pip install</code> libraries and start an interpreter using Python 3 inside the virtualenv where you can successfully <code>import</code> packages.</p>
<h2 id="h.w8zq24tyf9du" class="c11">urllib</h2>
<p><a href="https://docs.python.org/3.1/library/urllib.request.html#module-urllib.request">urllib</a> is a module built into the Python standard library and uses <a href="https://docs.python.org/3.1/library/http.client.html">http.client</a> which implements the client side of HTTP and HTTPS protocols. There’s no pip install required because urllib is distributed and installed with Python. If you value stability, this is for you. The <a href="https://www.twilio.com/docs/libraries/python">twilio-python helper library</a> uses urllib.<br />
urllib can require more work than using the libraries built on top of it. For example, you have to create a URL object before making the HTTP request.</p><pre class="crayon-plain-tag">import urllib.request
import urllib.parse


url = '<a href="https://api.spotify.com/v1/search?type=artist&amp;q=snoop">https://api.spotify.com/v1/search?type=artist&amp;q=snoop</a>'
f = urllib.request.urlopen(url)
print(f.read().decode('utf-8'))</pre><p>In the above example, we sent our request URL to the stdin of a CGI and read the data it returned to us.</p>
<h2 id="h.v373b168dgvs" class="c11">Requests</h2>
<p><a href="https://pypi.python.org/pypi/requests/2.12.1">Requests</a> is a favorite library in the Python community because it is concise and easy to use. Requests is powered by <a href="https://github.com/shazow/urllib3">urllib3</a> and jokingly claims to be the &#8220;The only <em>Non-GMO</em> HTTP library for Python, safe for human consumption.&#8221;</p>
<p>Requests abstracts a lot of boilerplate code and makes HTTP requests simpler than using the built-in urllib library.</p>
<p>Begin with the pip install:</p><pre class="crayon-plain-tag">pip install requests</pre><p>Make a request to Spotify:</p><pre class="crayon-plain-tag">import requests


r = requests.get('<a href="https://api.spotify.com/v1/search?type=artist&amp;q=snoop">https://api.spotify.com/v1/search?type=artist&amp;q=snoop</a>')
r.json()</pre><p>For pretty printing:</p><pre class="crayon-plain-tag">from pprint import pprint
pprint(r.json())</pre><p>We just made a <code>GET</code> request to our Spotify webpage creating a <code>Response        </code> object called <code>r</code>. Then, we use the builtin JSON decoder to deal with the content of our request.</p>
<h2 id="h.hxclvbg3j159" class="c11">Octopus</h2>
<p><a href="https://heynemann.github.io/octopus/">Octopus</a> is for the developer who wants to <code>GET</code> all the things. What if you want to make multiple requests to Spotify at the same time while working on your awesome new karaoke app? Much like its namesake, this library uses threads to concurrently retrieve and report on the completion of HTTP requests by using the familiar Requests library.</p>
<p>Alternatively, you can use Tornado&#8217;s IOLoop to asynchronously perform requests, but we won&#8217;t attempt that here.</p>
<p>Install it via pip:</p><pre class="crayon-plain-tag">pip install octopus-http</pre><p>Setup for Octopus is slightly more involved than our previous requests. We have to build a response handler and JSON encode the result using the built in JSON library.</p><pre class="crayon-plain-tag">import json

from pprint import pprint
from octopus import Octopus


def create_request(urls):
    data = []

    otto = Octopus(
           concurrency=4, auto_start=True, cache=True, expiration_in_seconds=10
    )

    def handle_url_response(url, response):
        if "Not found" == response.text:
            print ("URL Not Found: %s" % url)
        else:
            data.append(response.text)

    for url in urls:
        otto.enqueue(url, handle_url_response)

    otto.wait()

    json_data = json.JSONEncoder(indent=None,
                                 separators=(',', ': ')).encode(data)

    return pprint(json_data)


print(create_request(['https://api.spotify.com/v1/search?type=artist&amp;q=snoop',
                     'https://api.spotify.com/v1/search?type=artist&amp;q=dre']))</pre><p>In the snippet above, we define the function <code>create_requests</code> to use threaded Octopus requests. We start with an empty list, <code>data</code>, and create an instance of the <code>Octopus</code> class <code>otto</code>. We&#8217;ve configured it with the default settings from the documentation.</p>
<p>Then we build response handler where the response argument is an instance of <code>Octopus.Response</code>. Following each successful request, the response content will be added to our <code>data</code> list. With the handler in place we can use the main method in the <code>Octopus</code> class, <code>.enqueue</code>. This method is used to enqueue new URLs.</p>
<p>We specify the <code>.wait</code> method to wait for all the URLs in the queue to finish loading before we JSON encode our Python list and pprint the results.</p>
<p>Whew!<br />
<img class="&quot; alignnone" style="width: 355.00px; height: 200.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/wRNhud9ITEles1Bq-9fFYJ0jQRsziVIlcfe1x_2lvj0E7aS-gxBNt64D-TYZPXjbTQX1rKXFtNo8Y7WcL-u3bMavlKMX1bR3wBT2Q5y1umkm2X2Tw7j4HOR-mleneO6WtVY_9YZQ.png" alt="" /></p>
<h2 id="h.v0972gp3u2il" class="c11">HTTPie</h2>
<p><a href="https://httpie.org">HTTPie</a> is for the developer who wants to interact with HTTP servers, RESTful APIs, and web services fast &#8211; like one line of code fast. This library is “an open source CLI HTTP client that will make you smile: a user-friendly curl alternative.” While it is available outside of the Python ecosystem, it can be installed via Pip and is built on top of Requests.</p><pre class="crayon-plain-tag">pip install httpie</pre><p>The default protocol is HTTP but you can create an alias and reset the default for HTTPS like so:</p><pre class="crayon-plain-tag">alias https='http —default-scheme=https'</pre><p>And then make a request:</p><pre class="crayon-plain-tag">https "https://api.spotify.com/v1/search?type=artist&amp;q=snoop"</pre><p>The only information HTTPie needs to perform a request is a URL and boom we&#8217;re done.</p>
<p><img class="aligncenter wp-image-19254 size-full" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/12/httpie-1.gif" alt="httpie-1" width="1152" height="720" /></p>
<h2 id="h.dxlvtgnyvqqb" class="c11">Final Thoughts</h2>
<p>The Python ecosystem offers many options for interacting with JSON APIs. While these approaches are similar for the simplest of <code>GET</code> requests, the differences become more apparent as your HTTP requests grow in complexity. Play around and see which one best fits your needs. You might even give it a try in another language like <a href="https://www.twilio.com/blog/2015/10/4-ways-to-parse-a-json-api-with-ruby.html">Ruby</a>.</p>
<p>Did we miss your favorite library? Let us know in the comments or find me <a href="https://twitter.com/meganspeir">@meganspeir</a> on Twitter and let me know.</p>
<p><a href="https://twilioinc.wpengine.com/2016/12/http-requests-in-python-3.html">HTTP Requests in Python 3</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/12/http-requests-in-python-3.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to Send an SMS from iOS in Swift</title>
		<link>https://twilioinc.wpengine.com/2016/11/how-to-send-an-sms-from-ios-in-swift.html</link>
		<comments>https://twilioinc.wpengine.com/2016/11/how-to-send-an-sms-from-ios-in-swift.html#respond</comments>
		<pubDate>Wed, 02 Nov 2016 18:15:12 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Developers Drawing The Owl]]></category>

		<guid isPermaLink="false">https://twilioinc.wpengine.com/?p=19070</guid>
		<description><![CDATA[<p>Sending text messages from your iOS app might be something you need or want to do and we&#8217;ve seen this problem solved for our friends on Android. It&#8217;s time to solve it with Swift. Why Shouldn&#8217;t I Send SMS from the REST API in Swift? While Twilio is a REST API and you could make an HTTP request to it directly, you would need to store your... <a class="read-more" href="https://twilioinc.wpengine.com/2016/11/how-to-send-an-sms-from-ios-in-swift.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/11/how-to-send-an-sms-from-ios-in-swift.html">How to Send an SMS from iOS in Swift</a></p>]]></description>
				<content:encoded><![CDATA[<p><a href="https://www.twilio.com/docs/api/rest/sending-messages">Sending text messages</a> from your iOS app might be something you need or want to do and we&#8217;ve seen this problem solved for our friends on <a href="https://www.twilio.com/blog/2016/05/how-to-send-an-sms-from-android.html">Android</a>. It&#8217;s time to solve it with Swift.</p>
<h3 id="h.j0wu627z13tz" class="c2 c6">Why Shouldn&#8217;t I Send SMS from the REST API in Swift?</h3>
<p>While Twilio is a REST API and you could make an HTTP request to it directly, you would need to store your Twilio credentials inside your app which poses a serious security issue. An attacker could decompile the application, extract your credentials and use your Twilio account for anything they liked.</p>
<p>I bet <a href="https://twitter.com/SwiftOnSecurity">@SwiftOnSecurity</a> would have a few things to say about that.</p>
<p>To avoid this we will create a backend application that implements the Twilio REST API, wraps up your credentials and sends SMS messages for you. Then you can call your backend application from your Swift application and send SMS messages without compromising your credentials.<br />
Using the <a href="https://www.twilio.com/docs/api/rest">Twilio REST API</a> we will also need the following tools to send a message:</p>
<ul style="padding-left: 36px;">
<li>Xcode 8 and Swift 3</li>
<li>A Twilio Account and Twilio phone number &#8211; <a href="https://www.twilio.com/try-twilio">Get yours free</a>.</li>
<li>Your favorite language to create the backend. I will create a server using the <a href="https://www.twilio.com/docs/libraries/python">twilio-python helper library</a>. But you can choose your preference from the other <a href="https://www.twilio.com/docs/libraries">server-side libraries</a> as well.</li>
<li>If you&#8217;re sticking with Python, you will also need <a href="http://flask.pocoo.org">Flask</a>, the microframework to build your backend.</li>
<li>A tool to handle webhooks. We&#8217;ll use <a href="https://ngrok.com">ngrok</a>. Learn more about it <a href="https://www.twilio.com/blog/2015/09/6-awesome-reasons-to-use-ngrok-when-testing-webhooks.html">from Phil Nash</a>. Alternatively, you might have a server deployed on Heroku or something similar.</li>
</ul>
<h3 id="h.j0wu627z13tz" class="c2 c6">Setting Up Your Python Server</h3>
<p>Since we&#8217;re using Python on the backend running a small Flask application, open your favorite text editor to create your <code>app.py</code> file.<br />
Let&#8217;s test that it&#8217;s working with a quick Hello World:</p><pre class="crayon-plain-tag">from flask import Flask

app = Flask(__name__)

@app.route('/hello', methods=['GET'])
def say_hello():
    res = 'Hello World'
    return str(res)

if __name__ == '__main__':
        app.run()</pre><p>Run the application from terminal in your app.py project directory:</p><pre class="crayon-plain-tag">python app.py</pre><p>Check out <a href="http://127.0.0.1:5000/hello">http://127.0.0.1:</a><a href="http://127.0.0.1:5000/hello">5000/hello</a> or whatever port your app is running on from your browser and you should see that special little &#8220;Hello World&#8221; message.<br />
Now, we&#8217;ll make sure that we can reach the application outside of localhost by running on ngrok. In your terminal run:</p><pre class="crayon-plain-tag">ngrok http 5000</pre><p>We can use the generated URL to give our mobile application access to this backend. You should see something like this:</p>
<p><img class="&quot; aligncenter" style="width: 624.00px; height: 341.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/11/BeGKpcaWoJ-d2opEqwO8ylL33Qjej96GFZ614HZuMl0f2P0xTm1qhnxQwHYGVxXffWVEWzGXv8ME7jlLXxgLoEo5Gn_R1TC3iCP6eOMzHFAM_NyCmM_NGuSlgeu_8d0mRK90yGRK.png" alt="" /></p>
<h3 class="c2 c6"></h3>
<h3 id="h.j0wu627z13tz" class="c2 c6">Sending SMS with Snakes</h3>
<p>With the basics working as expected we can replace our hello world code with a new endpoint to our Flask application to handle sending SMS messages. The iOS application can then send requests to it and we will be in business.</p><pre class="crayon-plain-tag">from flask import Flask, request

from twilio.rest import TwilioRestClient

app = Flask(__name__)
 
# put your own credentials here 
ACCOUNT_SID = 'YOUR_ACCOUNT_SID' 
AUTH_TOKEN = 'YOUR_AUTH_TOKEN' 
 
client = TwilioRestClient(ACCOUNT_SID, AUTH_TOKEN)
 
@app.route('/sms', methods=['POST'])
def send_sms():
    message = client.messages.create(
        to=request.form['To'], 
        from_='YOUR_TWILIO_PHONE_NUMBER', 
        body=request.form['Body'],
    )

    return message.sid

if __name__ == '__main__':
        app.run()</pre><p>Be sure to replace Account Sid, Auth Token, and Twilio phone number with your own from <a href="https://www.twilio.com/console">the Twilio Console</a>. Then you can restart the app: <code>python run app.py</code>.</p>
<p>You can be sure that it&#8217;s working by making a quick curl request using your phone number and ngrok URL.</p><pre class="crayon-plain-tag">curl -XPOST —data "To= YOUR_PHONE_NUMBER&amp;Body=Test message" http://YOUR_NGROK_URL/sms</pre><p></p>
<h3 class="c2 c6"></h3>
<h3 id="h.j0wu627z13tz" class="c2 c6">There&#8217;s an App for That</h3>
<p>With our Python application running we can start building our iOS app.</p>
<p>Clone <a href="https://github.com/meganspeir/TwilioSms">this repository</a> which contains a storyboard setup applying <a href="https://www.twilio.com/blog/2016/10/getting-started-with-auto-layout-for-ios-in-xcode-8.html">Auto Layout</a> with the appropriate <code>UILabel</code>s, <code>UITextField</code>s, and <code>UIAction</code> for this application. I am using Xcode 8 and Swift version 3.</p>
<p>Open your terminal and navigate to where you want this project to live. Enter the following command to clone it, you can also download a <a href="https://github.com/meganspeir/TwilioSms/archive/master.zip">zip file</a> of the project:</p><pre class="crayon-plain-tag">git clone https://github.com/meganspeir/TwilioSms.git</pre><p>We are going to use <a href="https://www.twilio.com/blog/2016/05/getting-started-with-cocoapods-to-manage-dependencies-in-swift-and-ios.html">CocoaPods</a> to install the dependency we’ll need for this project. Install CocoaPods if you don’t have it:</p><pre class="crayon-plain-tag">sudo gem install cocoapods</pre><p>In the repository that you cloned, there is a <code>Podfile</code> listing the dependencies that need to be installed. We&#8217;re just using <a href="https://github.com/Alamofire/Alamofire">Alamofire</a> for making HTTP requests, so that&#8217;s the only thing in the list. Install with the following command:</p><pre class="crayon-plain-tag">pod install</pre><p>You may get an error message saying you need to run <code>pod repo update</code> as it is no longer run on <code>pod install</code> in Cocoapods 1.0. Do this and then you should be able to <code>pod install</code> again without error.<br />
CocoaPods takes care of linking all of the frameworks for you by creating a new <a href="https://developer.apple.com/library/ios/featuredarticles/XcodeConcepts/Concept-Workspace.html">Xcode Workspace</a>. From now on when opening the project in Xcode, you’ll have to use <code>TwilioSms.xcworkspace</code> instead of your normal Xcode project:</p><pre class="crayon-plain-tag">open TwilioSms.xcworkspace</pre><p>Navigate to <code>ViewController.swift</code> where the following code already exists:</p><pre class="crayon-plain-tag">class ViewController: UIViewController {
    
    @IBOutlet var phoneNumberField: UITextField!
    @IBOutlet var messageField: UITextField!
    
    @IBAction func sendData(sender: AnyObject) {
        
    }
    
    //

}</pre><p>This snippet sets our variables for a phone number, <code>phoneNumberField</code> and a message, <code>messageField</code> using <code>UITextField</code> outlets to capture user input. We have also connected an <code>@IBAction</code> target to the <code>ViewController</code> and set the action as the <code>sendData(_:)</code> method which will be called when the &#8220;Send&#8221; button is tapped.</p>
<p>You can check that Alamofire was installed correctly by adding this line to <code>ViewController.swift</code> below the default <code></code><code>import UIKit</code><code></code>:</p><pre class="crayon-plain-tag">import Alamofire</pre><p>Press “Command-B.” to verify the project builds with our dependency.<br />
<img class="&quot; aligncenter" style="width: 622.50px; height: 383.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/11/41U0DOOBbYPUQcmHs654fxPkjct55g95o3k0bGWsKcEa5Dw7RVgTfazesBy_mCRIax43e8VnxMbnmqzDyirBh9xlFnmloxCu5e5ca4OFLrfIBAUjmB5_SYQ-CP2NRx_ILg9kdaOX.png" alt="" /></p>
<p>If you build and run the project you can play around by typing in the <code>UITextField</code> boxes but they don&#8217;t currently do anything. We&#8217;ll fix it in a minute.</p>
<h3 id="h.j0wu627z13tz" class="c2 c6">Sending POST Requests with HTTP in Swift using Alamofire</h3>
<p>Open <code>ViewController.swift</code> and add the following code to the <code>ViewController</code> class inside the <code>sendData(_:)</code> method:</p><pre class="crayon-plain-tag">    @IBAction func sendData(sender: AnyObject) { 
        let headers = [
            "Content-Type": "application/x-www-form-urlencoded"
        ]
        
        let parameters: Parameters = [
            "To": phoneNumberField.text ?? "",
            "Body": messageField.text ?? ""
        ]
        
        Alamofire.request("YOUR_NGROK_URL/sms", method: .post, parameters: parameters, headers: headers).response { response in
                print(response)
            
        }
    }</pre><p>We&#8217;ve set the parameters for a POST request to our Flask server using values from our <code>UITextField</code> outlets as the <code>To</code> and <code>Body</code> parameters. Then, we specify our request&#8217;s header as a form encoded url header so that Twilio can accept the data as it did earlier when we made a request with curl.</p>
<p>Voilà! We&#8217;ve just received a text message from T. Swift. That&#8217;s right&#8230;Twilio Swift!</p>
<p><img class="aligncenter wp-image-19088 size-full" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/11/TSwift.gif" alt="tswift" width="1152" height="720" /></p>
<p>&nbsp;</p>
<h3 id="h.j0wu627z13tz" class="c2 c6">Stay Safe, Stay Swift</h3>
<p>Obliterating a potential vulnerability from your application is always cause for a celebration.</p>
<p><img class="&quot; aligncenter" style="width: 560.00px; height: 300.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/11/N-1kVOWV8-QQsTMGk_rtfl1_SwQKa05GVTRKvEUkGTCGaeB2L5FLeJMN4B23KU2Rkd4Jonyf9oNLrI1aaqZryxErinndfzHuzyaZiYi12lfx3QhggIn0LKpul54gQUAxnOPsyvXS.png" alt="" /></p>
<p>You&#8217;ve also created a chunk of Python code you can reuse on other platforms and continue to make HTTP requests directly to it.</p>
<p>With a similar design, you could add phone number lookups or generate phone calls right from your app. If you want to use <a href="https://www.twilio.com/docs/api/ip-messaging/guides/quickstart-ios">IP Messaging</a>, <a href="https://www.twilio.com/docs/api/video/guide/quickstart-ios">Video</a> or <a href="https://www.twilio.com/docs/api/client/ios">Client</a>, you’ll want a server to generate access tokens for those services too. Whatever communication challenge it may be, you&#8217;re well on your way to tackling it.</p>
<p>I&#8217;d love to hear about anything you&#8217;re building. Find me on Twitter <a href="http://twitter.com/meganspeir">@meganspeir</a> or send an email my way via <a class="c8" href="mailto:mspeir@twilio.com">mspeir@twilio.com</a>.</p>
<p><a href="https://twilioinc.wpengine.com/2016/11/how-to-send-an-sms-from-ios-in-swift.html">How to Send an SMS from iOS in Swift</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/11/how-to-send-an-sms-from-ios-in-swift.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Identity Management in Spring Boot with Twilio and Stormpath in 15 Minutes</title>
		<link>https://twilioinc.wpengine.com/2016/09/identity-management-in-spring-boot-with-twilio-and-stormpath-in-15-minutes.html</link>
		<comments>https://twilioinc.wpengine.com/2016/09/identity-management-in-spring-boot-with-twilio-and-stormpath-in-15-minutes.html#respond</comments>
		<pubDate>Thu, 29 Sep 2016 20:58:11 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Developers Drawing The Owl]]></category>

		<guid isPermaLink="false">https://twilioinc.wpengine.com/?p=18862</guid>
		<description><![CDATA[<p>This is a syndicated post, originally posted by Micah Silverman, Developer Evangelist at Stormpath, an api that lets developers add authentication, authorization, and user management to any web or mobile app in minutes. Micah created a Spring Boot application that uses Twilio&#8217;s Java Helper Library and Stormpath to send login notifications. Today, in less than 30 seconds or so, I was able to set up a Twilio... <a class="read-more" href="https://twilioinc.wpengine.com/2016/09/identity-management-in-spring-boot-with-twilio-and-stormpath-in-15-minutes.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/09/identity-management-in-spring-boot-with-twilio-and-stormpath-in-15-minutes.html">Identity Management in Spring Boot with Twilio and Stormpath in 15 Minutes</a></p>]]></description>
				<content:encoded><![CDATA[<p><i><span style="font-weight: 400;"><img class="alignright size-full wp-image-18871" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185.jpeg" alt="4d3a7b598434110ef3a0d44f96817185" width="256" height="256" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185.jpeg 256w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185-150x150.jpeg 150w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185-200x200.jpeg 200w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185-32x32.jpeg 32w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185-50x50.jpeg 50w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185-64x64.jpeg 64w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185-96x96.jpeg 96w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/4d3a7b598434110ef3a0d44f96817185-128x128.jpeg 128w" sizes="(max-width: 256px) 100vw, 256px" />This is a syndicated post, </span></i><a href="https://stormpath.com/blog/identity-management-spring-boot-twilio"><i><span style="font-weight: 400;">originally posted</span></i></a><i><span style="font-weight: 400;"> by </span></i><a href="https://twitter.com/afitnerd"><i><span style="font-weight: 400;">Micah Silverman</span></i></a><i><span style="font-weight: 400;">, Developer Evangelist at Stormpath, an api that lets developers add authentication, authorization, and user management to any web or mobile app in minutes. Micah created a Spring Boot application that uses Twilio&#8217;s </span></i><a href="https://www.twilio.com/docs/libraries/java"><i><span style="font-weight: 400;">Java Helper Library</span></i></a><i><span style="font-weight: 400;"> and </span></i><a href="https://stormpath.com"><i><span style="font-weight: 400;">Stormpath</span></i></a><i> </i><i><span style="font-weight: 400;">to send login notifications.<br />
</span></i></p>
<p><span style="font-weight: 400;">Today, in less than 30 seconds or so, I was able to set up a Twilio account and send myself a text message using </span><a href="https://httpie.org/"><span style="font-weight: 400;">httpie</span></a><span style="font-weight: 400;">. Another few minutes work (fewer than 5) and I had a Spring Boot application doing the same.</span></p>
<p><span style="font-weight: 400;">In about the same five minutes, you can get set up with Stormpath’s Identity Management as a service platform and learn to love auth.</span></p>
<p><span style="font-weight: 400;">We are truly living in a golden age of not-on-my-computer (cloud) services.</span></p>
<p><span style="font-weight: 400;">Just about anything you can imagine having done with computers or other devices over the last 15 years you can now sign-up for and get a proof of concept going in minutes. I remember sometime around 2007 (post iPhone 1) having a conversation with an SMS broker. After filling out a sheaf of paperwork, waiting about four months and being on the hook for lots of money, we were ready to write code against the SMS gateway. This was some arcane stuff way back then.</span></p>
<p><span style="font-weight: 400;">Ever try to roll your own identity management? Did you salt your hashes? Or, just admit it – you stored passwords in plaintext like everyone else back then.</span></p>
<p><span style="font-weight: 400;">In this post, we’ll put Stormpath and Twilio together. Here’s the scenario: When a user logs in from a new device, we want to send them an SMS notification to let them know. This is a common practice today to keep people informed about activity on their accounts. If I get a notification that a login from a new address has occurred and it wasn’t me, then I know that my account has been compromised.</span></p>
<p><span style="font-weight: 400;">For the purposes of this demonstration, we’ll consider new IP address access from a new device.</span></p>
<p><span style="font-weight: 400;">The code for this post can be found </span><a href="https://github.com/stormpath/stormpath-spring-boot-twilio-example"><span style="font-weight: 400;">here</span></a><span style="font-weight: 400;">.</span></p>
<h2><b>Set Up Stormpath</b></h2>
<p><span style="font-weight: 400;">The first step is to create a Stormpath account. You can follow our Quickstart docs </span><a href="https://docs.stormpath.com/java/spring-boot-web/quickstart.html"><span style="font-weight: 400;">here</span></a><span style="font-weight: 400;">. These are the basic steps:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Register at https://api.stormpath.com/register</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Click the link in the confirmation email</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Create an API Key to use for API access (Save it to: <code></span><span style="font-weight: 400;">~/.stormpath/apiKey.properties</code></span><span style="font-weight: 400;">)</span></li>
</ul>
<h3><b>Set up the Stormpath Spring Boot Integration</b></h3>
<p><span style="font-weight: 400;">The source code for this example can be found </span><a href="https://github.com/stormpath/stormpath-spring-boot-twilio-example"><span style="font-weight: 400;">here</span></a><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">For now, don’t worry about the Twilio stuff – it’s disabled by default. In the next section, we will integrate and enable Twilio.</span></p>
<p><span style="font-weight: 400;">The Stormpath Spring Boot integration makes it easy to trigger additional actions before and after a user logs in. It’s this mechanism that we use to send Twilio messages later on. For now, we will just make sure that the post-login handler is working.</span></p>
<p><span style="font-weight: 400;">To use the Stormpath Spring Boot integration you need only include a single dependency:</span></p><pre class="crayon-plain-tag"><dependency>
    <groupId>com.stormpath.spring</groupId>
    <artifactId>stormpath-thymeleaf-spring-boot-starter</artifactId>
    <version>${stormpath.version}</version>
</dependency></pre><p><span style="font-weight: 400;">In this case, we are using the Spring Boot + Web MVC + Thymeleaf integration so that we can return </span><a href="http://www.thymeleaf.org/"><span style="font-weight: 400;">Thymeleaf</span></a><span style="font-weight: 400;"> templates.</span></p>
<p><span style="font-weight: 400;">To set up our <code></span><span style="font-weight: 400;">postLoginHandler</code></span><span style="font-weight: 400;">, we simply need to create a Spring Boot configuration that exposes a bean:</span></p><pre class="crayon-plain-tag">@Configuration
public class PostLoginHandler{

    ...

    @Bean
    @Qualifier("loginPostHandler")
    public WebHandler defaultLoginPostHandler() {
        return (HttpServletRequest request, HttpServletResponse response, Account account) -&gt; {
            log.info("Hit default loginPostHandler with account: {}", account.getEmail());
            return true;
        };
    }
}</pre><p><span style="font-weight: 400;">You can fire up the Spring Boot app like so:</span></p><pre class="crayon-plain-tag">mvn clean install
mvn spring-boot:run</pre><p><span style="font-weight: 400;">Now, you can browse to: <code></span><span style="font-weight: 400;">http://localhost:8080/register</code></span><span style="font-weight: 400;"> to create an account in Stormpath. You can then browse to: <code></span><span style="font-weight: 400;">http://localhost:8080/login</code></span><span style="font-weight: 400;">. You should see something like this in the log output:</span></p><pre class="crayon-plain-tag">2016-09-14 22:37:18.078  ... : Hit default loginPostHandler with account: micah@stormpath.com</pre><p><span style="font-weight: 400;">Huzzah! Our post-login hook is working.</span></p>
<h3><b>A Word on <code></b><b>CustomData</code></b></h3>
<p><span style="font-weight: 400;">The use case we are modeling in this example is to send a text message (SMS) to a user whenever they login from a new location. In order to do that we need the user’s phone number. We also need to store an array of locations they’ve logged in from so we can determine if they are logging in from a new location.</span></p>
<p><span style="font-weight: 400;">Enter Stormpath <code></span><span style="font-weight: 400;">CustomData</code></span><span style="font-weight: 400;">. We knew early on that we couldn’t capture all the use cases for user data that our customers might have. So, we attached 10MB of free-form JSON data to every first-class Stormpath object, including user accounts. That’s <code></span><span style="font-weight: 400;">CustomData</code></span><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">We store the information for the user like so:</span></p><pre class="crayon-plain-tag">{
  "loginIPs": [
    "0:0:0:0:0:0:0:1",
    "104.156.228.126",
    "104.156.228.136"
  ],
  "phoneNumber": "+15556065555"
}</pre><p><span style="font-weight: 400;">Here’s what it looks like in the Stormpath Admin Console:</span></p>
<p><span style="font-weight: 400;"><img class="aligncenter wp-image-18864 size-full" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/54721858.png" alt="54721858" width="888" height="712" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/54721858.png 888w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/54721858-300x241.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/54721858-768x616.png 768w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/54721858-200x160.png 200w" sizes="(max-width: 888px) 100vw, 888px" /><br />
</span></p>
<p><span style="font-weight: 400;">We’ll get back to how this <code></span><span style="font-weight: 400;">CustomData</code></span><span style="font-weight: 400;"> is set up once we work Twilio into the mix.</span></p>
<h2><b>Set Up Twilio</b></h2>
<p><span style="font-weight: 400;">Twilio has a </span><a href="https://www.twilio.com/docs/quickstart/java/sms"><span style="font-weight: 400;">QuickStart</span></a><span style="font-weight: 400;"> that will get you up and running very quickly.</span></p>
<p><span style="font-weight: 400;">The basic steps are these:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Enter some basic registration information</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Enter your phone number</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Provision a Twilio phone number</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Test that you can send a message from your Twilio phone number to your phone number</span></li>
</ul>
<p><span style="font-weight: 400;">Make sure that you run the tests and can send messages. You can test it from the command line yourself using curl or </span><a href="https://httpie.org/https://httpie.org/"><span style="font-weight: 400;">httpie</span></a><span style="font-weight: 400;">:</span></p><pre class="crayon-plain-tag">http -f POST \
https://api.twilio.com/2010-04-01/Accounts//Messages.json \
To= From=  Body="Hello there..." \
--auth :</pre><p><span style="font-weight: 400;">Now that you know you can use your Twilio account, adding it as a dependency to the Spring Boot application is a snap:</span></p><pre class="crayon-plain-tag"><dependency>
    <groupId>com.twilio.sdk</groupId>
    <artifactId>twilio-java-sdk</artifactId>
    <version>(6.0,6.9)</version>
</dependency></pre><p></p>
<h2><b>Tie It All Together</b></h2>
<p><span style="font-weight: 400;">Earlier, we set up the Spring Boot application to perform an action after a user has successfully logged in. That action was simply to log some information. Now, we are going to integrate the ability to send a Twilio message using this same post-login handler.</span></p><pre class="crayon-plain-tag">@Bean
@Qualifier("loginPostHandler")
public WebHandler twilioLoginPostHandler() {
    return (HttpServletRequest request, HttpServletResponse response, Account account) -&gt; {
        log.info("Account Full Name: " + account.getFullName());

        CustomData customData = account.getCustomData();
        String toNumber = (String) customData.get(phoneNumberIdentifier);
        List loginIPs = getLoginIPs(customData);

        String ipAddress = getIPAddress(request);

        if (loginIPs.contains(ipAddress)) {
            // they've already logged in from this location
            log.info("{} has already logged in from: {}. No message sent.", account.getEmail(), ipAddress);
        } else {
            boolean messageSent = TwilioLoginMessageBuilder
                .builder()
                .setAccountSid(twilioAccountSid)
                .setAuthToken(twilioAuthToken)
                .setFromNumber(twilioFromNumber)
                .setToNumber(toNumber)
                .send("New login for: " + account.getEmail() + ", from: " + ipAddress);

            // only save the ip address if the twilio message was successfully sent
            if (messageSent) {
                saveLoginIPs(ipAddress, loginIPs, customData);
            }
        }

        return true;
    };
}</pre><p><span style="font-weight: 400;">Lines 8 and 9 retrieve the user’s phone number and the list of addresses that the user has logged in from before. It pulls this information from the user’s <code></span><span style="font-weight: 400;">CustomData</code></span><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">Assuming they are logging in from a new location, line 18 saves the new address back to <code></span><span style="font-weight: 400;">CustomData</code> </span><span style="font-weight: 400;">and line 20 fires off the Twilio message.</span></p>
<p><span style="font-weight: 400;">The <code></span><span style="font-weight: 400;">TwilioLoginMessageBuilder</code></span><span style="font-weight: 400;"> is defined in the sample and uses a </span><a href="https://en.wikipedia.org/wiki/Fluent_interface"><span style="font-weight: 400;">fluent</span></a><span style="font-weight: 400;"> interface.</span></p>
<p><span style="font-weight: 400;">The <code></span><span style="font-weight: 400;">send</code></span><span style="font-weight: 400;"> method used on line 26 above first checks to make sure that Twilio is configured properly and, if so, attempts to send the message:</span></p><pre class="crayon-plain-tag">TwilioRestClient client = new TwilioRestClient(accountSid, authToken);

List params = new ArrayList&lt;&gt;();
params.add(new BasicNameValuePair("To", toNumber));
params.add(new BasicNameValuePair("From", fromNumber));
params.add(new BasicNameValuePair("Body", msg));

MessageFactory messageFactory = client.getAccount().getMessageFactory();
try {
    Message message = messageFactory.create(params);
    log.info("Message successfuly sent via Twilio. Sid: {}", message.getSid());
    return true;
} catch (TwilioRestException e) {
    log.error("Error communicating with Twilio: {}", e.getErrorMessage(), e);
    return false;
}</pre><p><span style="font-weight: 400;">Let’s fire up the app and see it in action!</span></p><pre class="crayon-plain-tag">mvn clean install

TWILIO_ACCOUNT_SID= \
TWILIO_AUTH_TOKEN= \
TWILIO_FROM_NUMBER= \
TWILIO_ENABLED=true \
java -jar target/*.jar</pre><p><span style="font-weight: 400;">Hitting the front door, <code></span><span style="font-weight: 400;">http://localhost:8080</code></span><span style="font-weight: 400;">, you have the opportunity to log in. If you look at the log, you’ll see that the first time you log in, you </span><i><span style="font-weight: 400;">don’t</span></i><span style="font-weight: 400;"> get a message because there’s no phone number for you on file.<img class="size-medium wp-image-18865 aligncenter" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/7161604-300x153.png" alt="7161604" width="300" height="153" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/7161604-300x153.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/7161604-200x102.png 200w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/7161604.png 393w" sizes="(max-width: 300px) 100vw, 300px" /><br />
<img class="size-medium wp-image-18869 aligncenter" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/15149852-1-300x203.png" alt="15149852" width="300" height="203" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/15149852-1-300x203.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/15149852-1-200x135.png 200w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/15149852-1.png 511w" sizes="(max-width: 300px) 100vw, 300px" /><br />
</span></p><pre class="crayon-plain-tag">2016-09-15 16:48:31.621  INFO: Account Full Name: micah silverman
2016-09-15 16:48:31.750  WARN: No toNumber set. Cannot proceed.</pre><p><span style="font-weight: 400;">The next thing to do is to set a phone number:<img class="size-medium wp-image-18867 aligncenter" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/34509960-300x63.png" alt="34509960" width="300" height="63" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/34509960-300x63.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/34509960-200x42.png 200w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/34509960.png 550w" sizes="(max-width: 300px) 100vw, 300px" /></span></p>
<p>&nbsp;</p>
<p><span style="font-weight: 400;">Now, you can log out and log in again and you should receive the Twilio notification:<img class="size-medium wp-image-18868 aligncenter" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/22712755-300x175.png" alt="22712755" width="300" height="175" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/22712755-300x175.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/22712755-200x117.png 200w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/22712755.png 446w" sizes="(max-width: 300px) 100vw, 300px" /></span></p><pre class="crayon-plain-tag">2016-09-15 16:53:44.599  INFO: Account Full Name: micah silverman
2016-09-15 16:53:46.080  INFO: Message successfully sent via Twilio. Sid: SM9cd7fdfa3f8f463dbdd8f16662c13b5b</pre><p><img class="size-full wp-image-18870 aligncenter" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/51977529.png" alt="51977529" width="294" height="289" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/09/51977529.png 294w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/51977529-200x197.png 200w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/51977529-32x32.png 32w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/51977529-50x50.png 50w, https://twilioinc.wpengine.com/wp-content/uploads/2016/09/51977529-64x64.png 64w" sizes="(max-width: 294px) 100vw, 294px" /></p>
<h2><b>Synergy!</b></h2>
<p><span style="font-weight: 400;">In this post, we’ve taken Stormpath’s post-login handler capability and coupled it with Twilio’s SMS capability to produce new functionality greater than the two of these platforms could do separately.</span></p>
<p><span style="font-weight: 400;">Definitely a golden-age for services.</span></p>
<p><span style="font-weight: 400;">In the </span><a href="https://github.com/stormpath/stormpath-spring-boot-twilio-example"><span style="font-weight: 400;">code repo</span></a><span style="font-weight: 400;"> for this post, there’s some more Spring Boot magic that’s used including dynamically loading the <code></span><span style="font-weight: 400;">defaultLoginPostHandler</code></span><span style="font-weight: 400;"> or <code></span><span style="font-weight: 400;">twilioLoginPostHandler</code></span><span style="font-weight: 400;"> based on config settings. To use the Twilio handler, simply set the <code></span><span style="font-weight: 400;">twilio.enabled=true</code></span><span style="font-weight: 400;"> property in the <code></span><span style="font-weight: 400;">application.properties</code> file.</span></p>
<p><span style="font-weight: 400;">Now, go forth and glue some services together for fun and profit!</span></p>
<h2><b>Learn More</b></h2>
<p><span style="font-weight: 400;">Interested in learning more about user authentication with Spring Boot and Stormpath? We have some other great resources you can review:</span></p>
<p><a href="https://stormpath.com/blog/fun-with-java-spring-boot-token-management"><span style="font-weight: 400;">OAuth 2.0 Token Management with Spring Boot and Stormpath</span></a></p>
<p><a href="https://stormpath.com/blog/spring-boot_id-site_heroku"><span style="font-weight: 400;">Single Sign-On for Java in 20 Minutes with Spring Boot and Heroku</span></a></p>
<p><a href="https://stormpath.com/blog/5-practical-tips-for-building-your-spring-boot-api"><span style="font-weight: 400;">5 Practical Tips for Building Your Spring Boot API</span></a></p>
<p>&nbsp;</p>
<p><a href="https://twilioinc.wpengine.com/2016/09/identity-management-in-spring-boot-with-twilio-and-stormpath-in-15-minutes.html">Identity Management in Spring Boot with Twilio and Stormpath in 15 Minutes</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/09/identity-management-in-spring-boot-with-twilio-and-stormpath-in-15-minutes.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Ryan Leslie is Coming to SIGNAL London</title>
		<link>https://twilioinc.wpengine.com/2016/08/ryan-leslie-is-coming-to-signal-london.html</link>
		<comments>https://twilioinc.wpengine.com/2016/08/ryan-leslie-is-coming-to-signal-london.html#respond</comments>
		<pubDate>Thu, 18 Aug 2016 10:00:29 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Developers Drawing The Owl]]></category>

		<guid isPermaLink="false">https://twilioinc.wpengine.com/?p=18606</guid>
		<description><![CDATA[<p>Who knew an artist could change the trajectory of their career one SMS at a time? Ryan Leslie, the Harvard educated, grammy-nominated rap and hip-hop artist did just this. He created SuperPhone, a platform that enables him (and you) to connect with an audience on a more personal level. Ryan will be joining us for SIGNAL London on September 20th, 2016. You don&#8217;t want to miss... <a class="read-more" href="https://twilioinc.wpengine.com/2016/08/ryan-leslie-is-coming-to-signal-london.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/08/ryan-leslie-is-coming-to-signal-london.html">Ryan Leslie is Coming to SIGNAL London</a></p>]]></description>
				<content:encoded><![CDATA[<p><span style="font-weight: 400;">Who knew an artist could change the trajectory of their career </span><a href="https://www.twilio.com/docs/api/rest/sending-messages"><span style="font-weight: 400;">one SMS</span></a><span style="font-weight: 400;"> at a time? </span></p>
<p><a href="http://mzrt.com/"><span style="font-weight: 400;">Ryan Leslie</span></a><span style="font-weight: 400;">, the Harvard educated, grammy-nominated rap and hip-hop artist did just this. He created </span><a href="http://www.superphone.io/"><span style="font-weight: 400;">SuperPhone</span></a><span style="font-weight: 400;">, a platform that enables him (and you) to connect with an audience on a more personal level. </span></p>
<p><span style="font-weight: 400;">Ryan will be joining us for </span><a href="https://www.twilio.com/signal/london"><span style="font-weight: 400;">SIGNAL London</span></a><span style="font-weight: 400;"> on September 20th, 2016. You don&#8217;t want to miss it.</span></p>
<h3><b>This is SuperPhone</b></h3>
<p><span style="font-weight: 400;">We recognized Ryan as a DOER at </span><a href="https://www.twilio.com/signal"><span style="font-weight: 400;">SIGNAL</span></a><span style="font-weight: 400;">, our annual conference for developers. DOERs are folks in the Twilio community who&#8217;ve done something to change the world with a text editor.</span></p>
<p><span style="font-weight: 400;">I texted +</span><b>1 (646) 887-6968</b><span style="font-weight: 400;"> in October 2015 to ask Ryan what he thought about being a part of SIGNAL. But I never expected that I&#8217;d actually get a human response, let alone from Ryan himself! After exchanging a few texts with Ryan via SuperPhone you can&#8217;t help but feel like maybe you&#8217;ve been friends for a long time. This is a powerful thing, giving an artist the freedom to have real connections with their followers. And Ryan has personally replied to over 50,000 of his fans since creating SuperPhone.</span></p>
<p><span style="font-weight: 400;">&#8220;Literally, my entire life started to change. Not just because I had a 50% conversion rate on sales,” says Ryan.</span></p>
<p><span style="font-weight: 400;">He was as excited to share this story as he is to share his music with his fans. And it could not have been more surreal to see a rapper/producer/coder/entrepreneur onstage at SIGNAL. </span><a href="https://youtu.be/ZeqFIcRbdLs?t=18m15s"><span style="font-weight: 400;">Around 18 minutes into the video</span></a><span style="font-weight: 400;">, Ryan transitions from telling his story to busting out a performance like no other in respect to what most developers experience at a tech conference. </span></p>
<p><span style="font-weight: 400;">Check out the full story and watch him perform </span><i><span style="font-weight: 400;">Never Break Down</span></i><span style="font-weight: 400;"> at SIGNAL <a href="https://www.youtube.com/watch?v=ZeqFIcRbdLs">here</a>:</span></p>
<p><iframe width="560" height="315" src="https://www.youtube.com/embed/ZeqFIcRbdLs" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<p>&nbsp;</p>
<h3><b><img class="alignright wp-image-18607 size-medium" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_8811-300x199.jpg" alt="DSC_8811" width="300" height="199" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_8811-300x199.jpg 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_8811-768x510.jpg 768w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_8811-1024x680.jpg 1024w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_8811-200x133.jpg 200w" sizes="(max-width: 300px) 100vw, 300px" />Next Up: SIGNAL London</b></h3>
<p><span style="font-weight: 400;">Ryan and the SuperPhone story are ever evolving. He will be joining us again on September 20th at The Brewery on Chiswell Street to share more with the developer community at SIGNAL London. </span><a href="https://eegeventsite.secure.force.com/twiliosignallondon"><span style="font-weight: 400;">Use the code BLOG50 on registration</span></a><span style="font-weight: 400;"> and you’ll get £50 off the ticket price.</span></p>
<p>&nbsp;</p>
<p><a href="https://twilioinc.wpengine.com/2016/08/ryan-leslie-is-coming-to-signal-london.html">Ryan Leslie is Coming to SIGNAL London</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/08/ryan-leslie-is-coming-to-signal-london.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Shahzeb Khan Builds Frank Ocean Album Detection</title>
		<link>https://twilioinc.wpengine.com/2016/08/shahzeb-khan-builds-frank-ocean-album-detection.html</link>
		<comments>https://twilioinc.wpengine.com/2016/08/shahzeb-khan-builds-frank-ocean-album-detection.html#respond</comments>
		<pubDate>Fri, 12 Aug 2016 23:24:12 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Developers Drawing The Owl]]></category>

		<guid isPermaLink="false">https://twilioinc.wpengine.com/?p=18569</guid>
		<description><![CDATA[<p>Looking for a reason to start playing with Twilio&#8217;s PHP Helper Library, Shahzeb Khan built (650)82OCEAN while anxiously awaiting the release of his favorite artist&#8217;s latest album. Boys Don&#8217;t Cry is the long suspected second studio release from that of one Frank Ocean. Why a project around Frank Ocean? Shahzeb says, &#8220;I mean, it&#8217;s become a meme right?&#8221; Fans of the rap artist are all too... <a class="read-more" href="https://twilioinc.wpengine.com/2016/08/shahzeb-khan-builds-frank-ocean-album-detection.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/08/shahzeb-khan-builds-frank-ocean-album-detection.html">Shahzeb Khan Builds Frank Ocean Album Detection</a></p>]]></description>
				<content:encoded><![CDATA[<p><span style="font-weight: 400;">Looking for a reason to start playing with Twilio&#8217;s </span><a href="https://www.twilio.com/docs/libraries/php"><span style="font-weight: 400;">PHP Helper Library</span></a><span style="font-weight: 400;">, </span><a href="https://twitter.com/notshahzeb"><span style="font-weight: 400;">Shahzeb Khan </span></a><span style="font-weight: 400;">built </span><a href="http://shahzeb.co/frank-ocean/"><span style="font-weight: 400;">(650)82OCEAN</span></a><span style="font-weight: 400;"> while anxiously awaiting the release of his favorite artist&#8217;s latest album.</span></p>
<p><i><span style="font-weight: 400;">Boys Don&#8217;t Cry </span></i><span style="font-weight: 400;">is the long suspected second studio release from that of one Frank Ocean. Why a project around Frank Ocean? Shahzeb says, &#8220;I mean, it&#8217;s become a meme right?&#8221; </span></p>
<p><span style="font-weight: 400;">Fans of the rap artist are all too familiar with the waiting game as </span><a href="https://en.wikipedia.org/wiki/Boys_Don%27t_Cry_(Frank_Ocean_album)"><span style="font-weight: 400;">the album</span></a><span style="font-weight: 400;"> has been a tease since mid 2013. </span></p>
<h3><b>Are You There Frank, It&#8217;s Me Shahzeb? </b></h3>
<p><span style="font-weight: 400;">Tired of watching Twitter and music blogs so closely for any news of a release, Shahzeb thought he would save time on this effort for himself and two or three friends.<img class="alignright size-medium wp-image-18572" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_1850-300x201.jpg" alt="DSC_1850" width="300" height="201" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_1850-300x201.jpg 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_1850-768x513.jpg 768w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_1850-1024x684.jpg 1024w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/DSC_1850-200x134.jpg 200w" sizes="(max-width: 300px) 100vw, 300px" /> </span></p>
<p><span style="font-weight: 400;">The Junior at UC Davis is studying Computer Science and Engineering. Putting those skills to use with PHP and Twilio he built (650)82OCEAN as a </span><a href="https://lumen.laravel.com/"><span style="font-weight: 400;">Lumen application</span></a><span style="font-weight: 400;">. The project&#8217;s namesake comes from the </span><a href="https://www.twilio.com/docs/api/lookups"><span style="font-weight: 400;">Twilio number</span></a> <b>(650) 826-2326</b><span style="font-weight: 400;"> behind it. </span></p>
<p><span style="font-weight: 400;">The service pings iTunes, Spotify, and Twitter every minute or so for any Frank Ocean updates. Inexperienced in the minutia of the album&#8217;s history thus far, I jokingly asked, &#8220;What if the album drops on Tidal?&#8221; Shahzeb laughed, but admitted he had done his research stating that</span><a href="http://pigeonsandplanes.com/news/2016/08/frank-ocean-apple-music-reps-release-date"><span style="font-weight: 400;"> Apple Support has hinted</span></a><span style="font-weight: 400;"> at the release.</span></p>
<p><span style="font-weight: 400;">The most &#8220;complex&#8221; part of the application includes a Twilio Controller for Lumen running a background job to handle the </span><a href="https://www.twilio.com/docs/api/rest/sending-messages"><span style="font-weight: 400;">sending of SMS</span></a><span style="font-weight: 400;">. He&#8217;s open sourced the following code </span><a href="https://github.com/shahzeb1/twilio-controller-laravel"><span style="font-weight: 400;">on Github</span></a><span style="font-weight: 400;">.</span></p><pre class="crayon-plain-tag">&lt;?php
/**
 * TextController.php: 2 lines to send a text using Twilio (for Laravel and Lumen).
 *
 * By Shahzeb Khan (www.shahzeb.co or @notshahzeb on twitter)
 */

namespace App\Http\Controllers;
use Services_Twilio;
use Log;

class TextController extends Controller
{
	protected $number, $message;

	/**
	 * Create a new TextController instance
	 * @param phone-number $num Phone number for the person being texted
	 */
    public function __construct($num)
    {
    	$this-&gt;number = $num;
    }

    /**
     * Send a text message to a given number.
     * @param  text $msg Body for the text message
     * @return bool      ture = text sent, false = error
     */
    public function sendText($msg){
	    $AccountSid = env('TWILIO_SID');
	    $AuthToken = env('TWILIO_AUTH_TOKEN');
	    $client = new Services_Twilio($AccountSid, $AuthToken);
	    $this-&gt;message = $msg;
	    
	    try {
	        $message = $client-&gt;account-&gt;messages-&gt;create(array(
	            "From" =&gt; "+".env('TWILIO_NUMBER'),
	            "To" =&gt; $this-&gt;number,
	            "Body" =&gt; $this-&gt;message,
	        ));
	    } catch (\Services_Twilio_RestException $e) {
	         Log::error("Twilio error while texting ".$this-&gt;number.": ".$e-&gt;getMessage());
	         return false;
	    }
	    
	    return true;
	    Log::info("Sent text to ".$this-&gt;number); ;
	 } 
}</pre><p></p>
<h3><b>Just A Few Friends</b></h3>
<p><span style="font-weight: 400;">Shahzeb thought about using email at first, but after writing the code in a day he says, &#8220;Twilio is actually faster than using email services, which I wasn&#8217;t expecting. It&#8217;s scaled really well and using it has been an absolute breeze.&#8221; </span></p>
<p><span style="font-weight: 400;">He&#8217;s quickly reached 8,500 subscribers for what he likes to think of as the &#8220;Frank Ocean Album Detection Service.&#8221; It has also been covered </span></p>
<p><span style="font-weight: 400;">Another thing that took Shahzeb by surprise was having international subscribers. He had people from Brazil and Mexico emailing him to ask if the number would work internationally and subsequently informing him it did indeed work. &#8220;Having this international support without any sort of code on my part is awesome,&#8221; he said. </span></p>
<p><span style="font-weight: 400;">When asked if he had any last words for the elusive Ocean, he said, &#8220;This code will survive longer than the wait.&#8221; This will come in handy if the artist ever decides to release a third album.</span></p>
<p><span style="font-weight: 400;">Until then, we are indeed waiting and Shahzeb just added another subscriber.</span></p>
<p>&nbsp;</p>
<p><img class="aligncenter wp-image-18573 size-large" src="https://twilioinc.wpengine.com/wp-content/uploads/2016/08/complete-signup-1-1024x593.png" alt="complete-signup" width="640" height="371" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/08/complete-signup-1-1024x593.png 1024w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/complete-signup-1-300x174.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/complete-signup-1-768x445.png 768w, https://twilioinc.wpengine.com/wp-content/uploads/2016/08/complete-signup-1-200x116.png 200w" sizes="(max-width: 640px) 100vw, 640px" /></p>
<p><a href="https://twilioinc.wpengine.com/2016/08/shahzeb-khan-builds-frank-ocean-album-detection.html">Shahzeb Khan Builds Frank Ocean Album Detection</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/08/shahzeb-khan-builds-frank-ocean-album-detection.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to Set Up Your Own Twilio Conference Line with TwiML Bins</title>
		<link>https://twilioinc.wpengine.com/2016/05/how-to-set-up-your-own-twilio-conference-line-with-twiml-bins.html</link>
		<comments>https://twilioinc.wpengine.com/2016/05/how-to-set-up-your-own-twilio-conference-line-with-twiml-bins.html#respond</comments>
		<pubDate>Thu, 05 May 2016 19:31:58 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Developers Drawing The Owl]]></category>

		<guid isPermaLink="false">http://twilioinc.wpengine.com/?p=17761</guid>
		<description><![CDATA[<p>You never know when having a conference line is going to come in handy. Here at Twilio, we&#8217;ve even used them to record podcasts. Would you believe me when I say it&#8217;s super easy to set one up? And the process just got even easier with the new Console and native TwiML Bins. All you need to get started is your free Twilio account and a... <a class="read-more" href="https://twilioinc.wpengine.com/2016/05/how-to-set-up-your-own-twilio-conference-line-with-twiml-bins.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/05/how-to-set-up-your-own-twilio-conference-line-with-twiml-bins.html">How to Set Up Your Own Twilio Conference Line with TwiML Bins</a></p>]]></description>
				<content:encoded><![CDATA[<p><span style="font-weight: 400;">You never know when having a conference line is going to come in handy. Here at Twilio, we&#8217;ve even used them to </span><a href="https://www.twilio.com/blog/2016/04/twilio-podcast.html"><span style="font-weight: 400;">record podcasts</span></a><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">Would you believe me when I say it&#8217;s super easy to set one up? And the process just got even easier with the new Console and </span><a href="https://www.twilio.com/blog/2016/05/introducing-native-twiml-bins-powered-by-the-twilio-cloud.html"><span style="font-weight: 400;">native TwiML Bins</span></a><span style="font-weight: 400;">. All you need to get started is your </span><a href="https://www.twilio.com/try-twilio"><span style="font-weight: 400;">free Twilio account</span></a><span style="font-weight: 400;"> and a phone number.</span></p>
<p>&nbsp;</p>
<p><img class="aligncenter wp-image-17763 size-large" src="http://twilioinc.wpengine.com/wp-content/uploads/2016/05/devloper-center-1024x383-1024x383.png" alt="devloper-center-1024x383" width="640" height="239" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/05/devloper-center-1024x383.png 1024w, https://twilioinc.wpengine.com/wp-content/uploads/2016/05/devloper-center-1024x383-300x112.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/05/devloper-center-1024x383-200x75.png 200w" sizes="(max-width: 640px) 100vw, 640px" /><br />
<span style="font-weight: 400;">You might be familiar with </span><a href="https://www.twilio.com/docs/api/twiml"><span style="font-weight: 400;">TwiML</span></a> <a href="https://www.twilio.com/docs/api/twiml"><span style="font-weight: 400;">&#8211; Twilio flavored XML used to create voice and SMS apps</span></a><span style="font-weight: 400;">. The pure magic of TwiML Bins for Voice and SMS is to be able to quickly host static TwiML without having to get a server up and running. </span></p>
<p><span style="font-weight: 400;">Let&#8217;s break down a simple <code>&lt;Conference&gt;</code> example. Create your bin called, </span><i><span style="font-weight: 400;">Super Awesome Conference Line</span></i><span style="font-weight: 400;">, which looks like this:</span></p>
<p>&nbsp;</p><pre class="crayon-plain-tag">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Response&gt;
  &lt;Say&gt;Thank you for calling the Super Awesome Conference. You'll be connected with your party shortly.&lt;/Say&gt;
    &lt;Dial record="true"&gt;
      &lt;Conference beep="true" waitUrl="http://twimlets.com/holdmusic?Bucket=com.twilio.music.guitars"&gt;Conference Line&lt;/Conference&gt;
    &lt;/Dial&gt;
&lt;/Response&gt;</pre><p>In the Console:</p>
<p>&nbsp;</p>
<p><img class="aligncenter wp-image-17764 size-large" src="http://twilioinc.wpengine.com/wp-content/uploads/2016/05/conf-line-1024x412.png" alt="conf-line" width="640" height="258" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/05/conf-line-1024x412.png 1024w, https://twilioinc.wpengine.com/wp-content/uploads/2016/05/conf-line-300x121.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/05/conf-line-200x81.png 200w" sizes="(max-width: 640px) 100vw, 640px" /></p>
<p><span style="font-weight: 400;"><a href="http://twilioinc.wpengine.com/wp-content/uploads/2016/05/config-phone.png"><br />
</a>Voila! Within our <code>&lt;Response&gt;</code> we nest the <code>&lt;Say&gt;</code>, <code>&lt;Dial&gt;</code>, and <code>&lt;Conference&gt;</code> TwiML verbs to set up our conference. <a href="http://twilioinc.wpengine.com/wp-content/uploads/2016/05/conf-line.png"><br />
</a></span></p>
<p><span style="font-weight: 400;">Each of these verbs have helpful parameters that extend  what can happen in a call. In the example above, we&#8217;re recording the call with the </span><a href="https://www.twilio.com/docs/api/twiml/dial#attributes"><span style="font-weight: 400;"><code>record</code> attribute</span></a><span style="font-weight: 400;"> set to &#8220;true&#8221;. Within &lt;Conference&gt; we set <code>beep</code> to &#8220;true&#8221; which plays a notification beep when a participant joins or leaves the conference and <code>waitUrl</code> lets you specify a URL for music that plays before the conference starts. You can grab a variety of musical styles from </span><a href="https://www.twilio.com/docs/api/twiml/conference#attributes-waitUrl"><span style="font-weight: 400;">the docs</span></a><span style="font-weight: 400;">. </span></p>
<p><span style="font-weight: 400;">All you need to do now is configure your Twilio phone number to point to your TwiML when </span><i><span style="font-weight: 400;">a call comes in</span></i><span style="font-weight: 400;">.</span></p>
<p>&nbsp;</p>
<p><img class="aligncenter wp-image-17765 size-large" src="http://twilioinc.wpengine.com/wp-content/uploads/2016/05/config-phone-1024x516.png" alt="config-phone" width="640" height="323" srcset="https://twilioinc.wpengine.com/wp-content/uploads/2016/05/config-phone-1024x516.png 1024w, https://twilioinc.wpengine.com/wp-content/uploads/2016/05/config-phone-300x151.png 300w, https://twilioinc.wpengine.com/wp-content/uploads/2016/05/config-phone-200x101.png 200w" sizes="(max-width: 640px) 100vw, 640px" /></p>
<p><span style="font-weight: 400;">You&#8217;ve got a fully functioning conference line you can use for calls of all kinds. Grab a couple of friends and give it a try on my number. </span></p>
<h1></h1>
<h1><b>Super Awesome Conference Line</b></h1>
<h1><b>(310) 907-8261</b></h1>
<p><span style="font-weight: 400;">We&#8217;re just getting started with the new Console. You can learn about it and much more at SIGNAL. Check out Andrew Jordan&#8217;s session for </span><span style="font-weight: 400;"><a href="https://www.twilio.com/signal/schedule/2PsAZGsKWQMQ4qsiCckqi6/breaking-the-call-paradigm-with-contextual-multi-party-voice-integrations">Designing Multi-party Call Flows with Twilio Conference</a>.</span></p>
<p><em><span style="font-weight: 400;">Use promo code &#8220;BLOG75&#8221; when you <a href="http://bit.ly/26XFItr">register here</a> to grab a $75 discount. We&#8217;ll see you there! </span></em></p>
<p>&nbsp;</p>
<p><a href="https://twilioinc.wpengine.com/2016/05/how-to-set-up-your-own-twilio-conference-line-with-twiml-bins.html">How to Set Up Your Own Twilio Conference Line with TwiML Bins</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/05/how-to-set-up-your-own-twilio-conference-line-with-twiml-bins.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Sara Chipps is Building Smart Jewelry for a Smarter Generation</title>
		<link>https://twilioinc.wpengine.com/2016/02/sara-chipps-is-building-smart-jewelry-for-a-smarter-generation.html</link>
		<comments>https://twilioinc.wpengine.com/2016/02/sara-chipps-is-building-smart-jewelry-for-a-smarter-generation.html#respond</comments>
		<pubDate>Fri, 26 Feb 2016 19:58:26 +0000</pubDate>
		<dc:creator><![CDATA[Megan Speir]]></dc:creator>
				<category><![CDATA[Developers Drawing The Owl]]></category>

		<guid isPermaLink="false">http://twilioinc.wpengine.com/?p=17093</guid>
		<description><![CDATA[<p>Sara Chipps is the Founder and CEO at Jewelbots which builds friendship bracelets for the iPhone era. She also co-founded Girl Develop It, a non-profit that helps women become software engineers, and she served as the CTO of Flatiron School, a developer bootcamp in NYC. Sara will be speaking at SIGNAL, our developer conference for communications May 24-25 in San Francisco. Join us at SIGNAL and... <a class="read-more" href="https://twilioinc.wpengine.com/2016/02/sara-chipps-is-building-smart-jewelry-for-a-smarter-generation.html">Read More</a></p><p><a href="https://twilioinc.wpengine.com/2016/02/sara-chipps-is-building-smart-jewelry-for-a-smarter-generation.html">Sara Chipps is Building Smart Jewelry for a Smarter Generation</a></p>]]></description>
				<content:encoded><![CDATA[<p><span style="font-weight: 400;">Sara Chipps is the Founder and CEO at Jewelbots which builds friendship bracelets for the iPhone era. She also co-founded Girl Develop It, a non-profit that helps women become software engineers, and she served as the CTO of Flatiron School, a developer bootcamp in NYC. Sara will be speaking at SIGNAL, our developer conference for communications May 24-25 in San Francisco. Join us at SIGNAL and meet Sara along with 2,000 other developers. <a href="https://eegeventsite.secure.force.com/twiliosignal?utm_source=twilio_blog&amp;utm_medium=post&amp;utm_campaign=sarachipps_twilio_radio">Register here</a> and use code RADIO for 20% off your ticket. </span></p>
<p><span style="font-weight: 400;">Recently, my colleague Greg Baugues caught up with Sara on Twilio Radio and learned about how she got into software engineering as a home-schooled kid (learning C), finding community, and transitioning from software to hardware at Jewelbots. She tells us about programming the friendship bracelets using the Arduino IDE and inspiring teen girls&#8217; interest in STEM through her own company and other organizations like First Robotics. </span></p>
<p><span style="font-weight: 400;">Sara offers some strategies to consider when getting involved with organizations like Girl Develop It and helping women learn to code. At SIGNAL, you&#8217;ll see Sara share some of her Internet of Things experience building </span><a href="https://www.twilio.com/signal/schedule/2xmoHrJCteEygG8kc0OWsy/jewel-bots"><span style="font-weight: 400;">smart jewelry for a smarter generation</span></a><span style="font-weight: 400;">.</span></p>
<p><iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/249058846&amp;color=ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false"></iframe></p>
<p><a href="https://twilioinc.wpengine.com/2016/02/sara-chipps-is-building-smart-jewelry-for-a-smarter-generation.html">Sara Chipps is Building Smart Jewelry for a Smarter Generation</a></p>]]></content:encoded>
			<wfw:commentRss>https://twilioinc.wpengine.com/2016/02/sara-chipps-is-building-smart-jewelry-for-a-smarter-generation.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
